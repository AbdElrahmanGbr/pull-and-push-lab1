{"ast":null,"code":"var _jsxFileName = \"/home/AbdElrahman/Desktop/Pull And Push/lab1/Frontend/src/screens/LongPoll.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Col, Form, ListGroup, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LongPoll = () => {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const base_url = 'http://localhost:8001/messages/long';\n\n  const getData = async () => {\n    const response = await fetch(base_url);\n    const {\n      data\n    } = await response.json();\n    setMessages(messages.concat(data));\n  };\n\n  const setData = () => {\n    fetch(base_url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message\n      })\n    });\n    setMessage('');\n  };\n\n  useEffect(() => {\n    getData();\n  }, [messages]);\n\n  const onHandleSubmit = e => {\n    e.preventDefault(); // Post Message\n\n    setData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      className: \"mx-auto my-5\",\n      md: 6,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: onHandleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Messages \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: message,\n            type: \"text\",\n            placeholder: \"Enter Your Message\",\n            onChange: e => setMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: messages && messages.map((mess, index) => {\n        return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"p-5 bg-light\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              class: \"display-3 text-center\",\n              children: mess.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LongPoll, \"WDgp24k/FdZO6Mwa4GS0i45C6ek=\");\n\n_c = LongPoll;\nexport default LongPoll;\n\nvar _c;\n\n$RefreshReg$(_c, \"LongPoll\");","map":{"version":3,"sources":["/home/AbdElrahman/Desktop/Pull And Push/lab1/Frontend/src/screens/LongPoll.js"],"names":["React","useState","useEffect","Col","Form","ListGroup","Row","LongPoll","message","setMessage","messages","setMessages","base_url","getData","response","fetch","data","json","concat","setData","method","headers","body","JSON","stringify","onHandleSubmit","e","preventDefault","target","value","map","mess","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,GAAR,EAAaC,IAAb,EAAmBC,SAAnB,EAA8BC,GAA9B,QAAwC,iBAAxC;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAMW,QAAQ,GAAG,qCAAjB;;AAEA,QAAMC,OAAO,GAAG,YAAY;AAC1B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAD,CAA5B;AACA,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACAN,IAAAA,WAAW,CAACD,QAAQ,CAACQ,MAAT,CAAgBF,IAAhB,CAAD,CAAX;AACD,GAJD;;AAMA,QAAMG,OAAO,GAAG,MAAM;AACpBJ,IAAAA,KAAK,CAACH,QAAD,EAAW;AACdQ,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFK;AAKdC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAChB,QAAAA;AAAD,OAAf;AALQ,KAAX,CAAL;AAOAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GATD;;AAWAP,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO;AACR,GAFQ,EAEN,CAACH,QAAD,CAFM,CAAT;;AAIA,QAAMe,cAAc,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF,GAD4B,CAG5B;;AACAR,IAAAA,OAAO;AACR,GALD;;AAMA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,EAAE,EAAE,CAAlC;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEM,cAAhB;AAAA,+BACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,SAAS,EAAC,gBAAvC;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,KAAK,EAAEjB,OADT;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,WAAW,EAAC,oBAHd;AAIE,YAAA,QAAQ,EAAGkB,CAAD,IAAOjB,UAAU,CAACiB,CAAC,CAACE,MAAF,CAASC,KAAV;AAJ7B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAeE,QAAC,SAAD;AAAA,gBACGnB,QAAQ,IACPA,QAAQ,CAACoB,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5B,4BACE,QAAC,SAAD,CAAW,IAAX;AAAA,iCACN;AAAK,YAAA,KAAK,EAAC,cAAX;AAAA,mCACE;AAAI,cAAA,KAAK,EAAC,uBAAV;AAAA,wBAAmCD,IAAI,CAACvB;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADM,WAAqBwB,KAArB;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OARD;AAFJ;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD,CAhED;;GAAMzB,Q;;KAAAA,Q;AAkEN,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Col, Form, ListGroup, Row} from 'react-bootstrap';\n\nconst LongPoll = () => {\n  const [message, setMessage] = useState('');\n\n  const [messages, setMessages] = useState([]);\n\n  const base_url = 'http://localhost:8001/messages/long';\n\n  const getData = async () => {\n    const response = await fetch(base_url);\n    const {data} = await response.json();\n    setMessages(messages.concat(data));\n  };\n\n  const setData = () => {\n    fetch(base_url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({message}),\n    });\n    setMessage('');\n  };\n\n  useEffect(() => {\n    getData();\n  }, [messages]);\n\n  const onHandleSubmit = (e) => {\n    e.preventDefault();\n\n    // Post Message\n    setData();\n  };\n  return (\n    <Row>\n      <Col className='mx-auto my-5' md={6}>\n        <Form onSubmit={onHandleSubmit}>\n          <Form.Group className='mb-3' controlId='formBasicEmail'>\n            <Form.Label>Messages </Form.Label>\n            <Form.Control\n              value={message}\n              type='text'\n              placeholder='Enter Your Message'\n              onChange={(e) => setMessage(e.target.value)}\n            />\n          </Form.Group>\n        </Form>\n      </Col>\n\n      <ListGroup>\n        {messages &&\n          messages.map((mess, index) => {\n            return (\n              <ListGroup.Item key={index}>\n\t\t\t\t\t\t\t\t<div class=\"p-5 bg-light\">\n\t\t\t\t\t\t\t\t\t\t<h1 class=\"display-3 text-center\">{mess.message}</h1>\n\t\t\t\t\t\t\t\t</div>\n              </ListGroup.Item>\n            );\n          })}\n      </ListGroup>\n    </Row>\n  );\n};\n\nexport default LongPoll;\n"]},"metadata":{},"sourceType":"module"}